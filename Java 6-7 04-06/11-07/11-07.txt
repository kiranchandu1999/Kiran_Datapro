Input-Output streams:
- A stream is an ordered sequence of data.
- An input stream moves data from external source and output stream sends data into external source.
- A stream that is likned to a file on a disk or printer or any netwrok behaves in the same manner.
- All classes and interfaces related to IO streams are in java.io package

Streams are two types based on stream of data:
1. Byte stream
- this stream contains a collection of bytes.
- All byte streams are derived from InputStream or OutputStream abstract classes.

2. Character stream
- this stream contains a collection of characters.
- All character streams are derived from two abstract classes - Reader and Writer.

In java, 3 streams are created automatically:
- System.out  --> standard output stream
- System.In --> standard input stream
- System.err --> standard error stream

1. Byte stream
InputStream:
it is an abstract class and it is a super class for all classes representing an input stream of bytes. child classes like FileInputStream, FilterInputStream, BufferedInputStream etc.

OutputStream:
it is an abstract class and it is a super class for all classes representing an output stream of bytes. child classes like FileOutputStream, FilterOutputStream, BufferedOutputStream etc.


2. Character stream
- this stream contains a collection of characters.
- All character streams are derived from two abstract classes - Reader and   Writer.

Reader:
 it is an abstract class which is used to take input from external source.
so that it has subchild called InputStreamReader class is used to take input and FileReader class is sub class for this InputStreamReader class.

FileReader fr = new FileReader(file path);

Writer:
- it is an abstract class which is used to pass stream of data to an external source.
- it has subchild called OutputStreamWriter class is used for output stream and FileWriter class is sub class for this OutputStreamWriter class.

FileWriter fw = new FileWriter(file path);