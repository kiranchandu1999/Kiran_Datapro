Array:
It is a fixed size data structure which stores data of similar type.
it follows 0th based indexing to store elements in it.
it is an object which stores elements in consecutive memory locations.

syntax:
data_type[ ]    variable_name   =   new   data_type[ size ];
ex:---->   int[ ]   arr1  =  new  int[5];   // array declaration
// array initialization --->  int[ ]  arr2  =  {5, 10, 12, 7, 8};

to read and write data into an array:
arr_name[index]  =  value;  // inserting data into array
arr_name[index];      // reading data from array

for each loop:
to read the data from a set of elements of same data type.
syntax:
for(data_type  variable_name : array/set) {
      // body
}

multi dimensional array:
when an array which contains another array as an element in it then it is called 2D array similarly 3D and so on.

syntax:
data_type[ ][ ]  variable name  = new data_type[ rows ][ cols ];
ex:
 --  2, 4, 6, 8
      1, 3, 5, 7
      4, 6, 1, 5
---> int[ ][ ]  arr3 =  new int[3][4];   // declaration
----> int[ ][ ]  arr4  =  { {2, 4, 6, 8}, {1, 3, 5, 7}, {4, 6, 1, 5}};

// to read and write:
arr4[0][1]    ----> 4

Multi dimensional array:
when an array contains multiple arrays in it then it is called multi-dimensional array.

syntax for 2D:
data_type[ ][ ]  variable_name  =  new  data_type[ rows ][ cols ];
ex:  4, 5, 8, 6
        1, 3, 7, 2
         9, 4, 5, 1
int[ ][ ]  arr1  =  new int[3][4];

// data read and write
arr1[1][2] ---> 7


for each loop / enhanced for loop:
syntax:
for(data_type  variable_name : array/set) {
      // loop body
}
