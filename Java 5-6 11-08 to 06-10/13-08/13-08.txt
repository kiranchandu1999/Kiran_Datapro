Naming convention:
class and interface --->  PascalCase  (FirstClass --- every word first letter should be capital)
method ---> camelCase (getName() -- every word first letter should be capital except first word)
variable ---> camelCase (ex: studentRollNo)
constants ---> UPPER_SNAKE_CASE (ex: MAX_VALUE)
package ---> lowercase with dot seperate (ex: com.example)

Rules:
1. should contain alphabets, digits, underscore (_) and dollor ($)
2. shouldn't use reserved keywords
3. shouldn't start with digit but can start with _ 
4. shouldn't contain any spaces

Data types:
In java data types are divided into 2 categories
- Primitive data types
(note : 1 byte = 8 bits)
1. byte       -    1 byte  --> -2^7 to 2^7 - 1
2. short     -     2 bytes --> -2^15 to 2^15 -1
3. int       -     4 bytes --> -2^31 to 2^31 - 1
4. long      -     8 bytes --> -2^63 to 2^63 - 1
5. float     -     4 bytes (max 6 digits after decimal point)
6. double    -     8 bytes (max 14 digits after decimal point)
7. char      -     2 bytes
8. boolean   -     1 bit

- Non - primitive
1. Strings
2. Arrays
3. Objects

Variables:
It is a container to store data in memory space.

syntax:
datatype  variable_name  =  value;

ex:
int myValue = 5;

Literals:
int ---->     int a = 50;
long ---->    long a = 10L;
double---->   double a = 4.5;
float ---->   float a = 2.8f;
char  ----->  char a = 'c';
String ---->  String s = "hello world";


Unicode system:
Unicode system in a standard to represent the characters of nearly all written languages like (English, Hindi, Chinese etc).
They are represented as uxxxx, "xxxx" defines hexa decimal numbers from 0000 to FFFF
Ex: 
u0041  represents 'A'
System.out.println("\u0041");  // prints 'A'
Note: '\' (back slash) is called as escape character
